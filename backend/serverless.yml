org: rtoken
service: ryantoken-v3
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  profile: default
  region: us-east-2
  environment:
    STAGE: ${opt:stage, self:provider.stage}
  
  httpApi:
    shouldStartNameWithService: true
    cors:
      allowedOrigins:
        - https://ryantoken.com
        - https://ryantoken-v3.netlify.app
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
      allowCredentials: true
      exposedResponseHeaders:
        - Special-Response-Header
      maxAge: 6000
    
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - 'arn:aws:s3:::ryan-token-cv-dev/*'
            - 'arn:aws:s3:::ryan-token-cv-prod/*'
  
params:
  dev:
    cvBucket: ryan-token-cv-dev
  prod:
    cvBucket: ryan-token-cv-prod
  
custom:
  warmup:
    default:
      enabled: false
  esbuild:
    bundle: true
    minify: true

functions:
  getCvUrl:
    handler: handler.getCvFromS3
    warmup:
      default:
        enabled: prod
    events:
      - httpApi:
          path: /cv
          method: get

package:
  individually: true
  
plugins:
  - serverless-plugin-common-excludes
  - serverless-plugin-warmup
  - serverless-esbuild
  
resources:
  Resources:
    CVBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${param:cvBucket}